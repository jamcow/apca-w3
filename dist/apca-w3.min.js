/*

/////    SAPC APCA - Advanced Perceptual Contrast Algorithm
/////           Beta 0.1.1 W3 • contrast function only
/////           DIST: W3 • Revision date: Dec 21, 2021
/////    Function to parse color values and determine Lc contrast
/////    Copyright © 2019-2021 by Andrew Somers. All Rights Reserved.
/////    LICENSE: W3 LICENSE
/////    CONTACT: Please use the ISSUES or DISCUSSIONS tab at:
/////    https://github.com/Myndex/SAPC-APCA/
/////
///////////////////////////////////////////////////////////////////////////////
/////
/////    IMPORTS:
/////    import { APCAcontrast, sRGBtoY, displayP3toY } from 'apca-w3';
/////    import { colorParsley } from 'colorparsley';
/////
/////    FORWARD CONTRAST USAGE:
/////    Lc = APCAcontrast( sRGBtoY( TEXTcolor ) , sRGBtoY( BACKGNDcolor ) );
/////
/////    Where the colors are sent as an rgba array [0,0,0,255]
/////
/////    Live Demonstrator at https://www.myndex.com/APCA/
// */
function APCAcontrast(a,b,c){c=void 0===c?-1:c;var d=[0,1.1];if(isNaN(a)||isNaN(b)||Math.min(a,b)<d[0]||Math.max(a,b)>d[1])return 0;d="BoW";a=.022<a?a:a+Math.pow(.022-a,1.414);b=.022<b?b:b+Math.pow(.022-b,1.414);if(5E-4>Math.abs(b-a))return 0;b>a?(a=1.14*(Math.pow(b,.56)-Math.pow(a,.57)),a=.1>a?0:a-.027):(d="WoB",a=1.14*(Math.pow(b,.65)-Math.pow(a,.62)),a=-.1<a?0:a+.027);return 0>c?100*a:0==c?Math.round(100*Math.abs(a))+"<sub>"+d+"</sub>":Number.isInteger(c)?(100*a).toFixed(c):0}
function sRGBtoY(a){a=void 0===a?[0,0,0]:a;return.2126729*Math.pow(a[0]/255,2.4)+.7151522*Math.pow(a[1]/255,2.4)+.072175*Math.pow(a[2]/255,2.4)}function displayP3toY(a){a=void 0===a?[0,0,0]:a;return.228982959480578*Math.pow(a[0],2.4)+.691749262585238*Math.pow(a[1],2.4)+.0792677779341829*Math.pow(a[2],2.4)}function adobeRGBtoY(a){a=void 0===a?[0,0,0]:a;return.297355022711381*Math.pow(a[0]/255,2.35)+.627372749714528*Math.pow(a[1]/255,2.35)+.0752722275740913*Math.pow(a[2]/255,2.35)}
function alphaBlend(a,b,c){a=void 0===a?[0,0,0,1]:a;b=void 0===b?[0,0,0]:b;c=void 0===c?!0:c;a[3]=Math.max(Math.min(a[3],1),0);var d=1-a[3],e=[0,0,0];for(i=0;3>i;i++)e[i]=b[i]*d+a[i]*a[3],c&&(e[i]=Math.min(Math.round(e[i]),255));return e}function calcAPCA(a,b,c,d){c=void 0===c?-1:c;d=void 0===d?!0:d;b=colorParsley(b);a=colorParsley(a);if(""!=a[3]||1>a[3])a=alphaBlend(a,b,d);return APCAcontrast(sRGBtoY(a),sRGBtoY(b),c)}
module.exports={APCAcontrast:APCAcontrast,sRGBtoY:sRGBtoY,displayP3toY:displayP3toY,adobeRGBtoY:adobeRGBtoY,alphaBlend:alphaBlend,calcAPCA:calcAPCA};
